{
	"info": {
		"_postman_id": "6793eff6-3fb6-417a-984f-dda50dfb8fb5",
		"name": "SMQD",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "management",
			"description": "",
			"item": [
				{
					"name": "version",
					"description": "",
					"item": [
						{
							"name": "version",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/version",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"version"
									]
								}
							},
							"response": []
						},
						{
							"name": "version simple",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/version?fmt=version",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"version"
									],
									"query": [
										{
											"key": "fmt",
											"value": "version"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "version commit",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/version?fmt=commit",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"version"
									],
									"query": [
										{
											"key": "fmt",
											"value": "commit"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "nodes",
					"description": "",
					"item": [
						{
							"name": "nodes",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fc2849-05f4-4afe-82f0-8d96e4a52777",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"api endpoint\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.result[0].api.address).to.eql(\"http://127.0.0.1:8080/api/v1\")",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/nodes",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"nodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "node",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "67f765f2-43bb-46f7-9077-cdfd6bacb709",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"datacenter\", function () {",
											"    var jsonData = pm.response.json();",
											"",
											"    var dataCenter = jsonData.result.dataCenter",
											"    pm.expect(dataCenter).to.eql(\"default\")",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/nodes/test-01",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"nodes",
										"test-01"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "plugins",
					"description": "",
					"item": [
						{
							"name": "plugins",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fc2849-05f4-4afe-82f0-8d96e4a52777",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"api endpoint\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.result[0].api.address).to.eql(\"http://127.0.0.1:8080/api/v1\")",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/plugins",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"plugins"
									]
								}
							},
							"response": []
						},
						{
							"name": "plugins fault-logger",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fc2849-05f4-4afe-82f0-8d96e4a52777",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"api endpoint\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.result[0].api.address).to.eql(\"http://127.0.0.1:8080/api/v1\")",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/plugins/thing2x-core-fault-logger",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"plugins",
										"thing2x-core-fault-logger"
									]
								}
							},
							"response": []
						},
						{
							"name": "plugins query=logger",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fc2849-05f4-4afe-82f0-8d96e4a52777",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"api endpoint\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.result[0].api.address).to.eql(\"http://127.0.0.1:8080/api/v1\")",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/plugins/thing2x-core-protocol-logger",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"plugins",
										"thing2x-core-protocol-logger"
									]
								}
							},
							"response": []
						},
						{
							"name": "plugins instances",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fc2849-05f4-4afe-82f0-8d96e4a52777",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"api endpoint\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.result[0].api.address).to.eql(\"http://127.0.0.1:8080/api/v1\")",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/plugins/thing2x-core-mqtt/instances",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"plugins",
										"thing2x-core-mqtt",
										"instances"
									]
								}
							},
							"response": []
						},
						{
							"name": "plugins instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fc2849-05f4-4afe-82f0-8d96e4a52777",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"api endpoint\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.result[0].api.address).to.eql(\"http://127.0.0.1:8080/api/v1\")",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/plugins/thing2x-core-mqtt/instances/core-mqtt",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"plugins",
										"thing2x-core-mqtt",
										"instances",
										"core-mqtt"
									]
								}
							},
							"response": []
						},
						{
							"name": "plugins instance query=mqtt",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fc2849-05f4-4afe-82f0-8d96e4a52777",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"api endpoint\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.result[0].api.address).to.eql(\"http://127.0.0.1:8080/api/v1\")",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/plugins/thing2x-core-mqtt/instances?query=mqtt",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"plugins",
										"thing2x-core-mqtt",
										"instances"
									],
									"query": [
										{
											"key": "query",
											"value": "mqtt"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "plugin status protocol-logger",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fc2849-05f4-4afe-82f0-8d96e4a52777",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"api endpoint\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.result[0].api.address).to.eql(\"http://127.0.0.1:8080/api/v1\")",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/plugins/thing2x-core-protocol-logger/instances/core-protocol",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"plugins",
										"thing2x-core-protocol-logger",
										"instances",
										"core-protocol"
									]
								}
							},
							"response": []
						},
						{
							"name": "plugin stop protocol-logger",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fc2849-05f4-4afe-82f0-8d96e4a52777",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"api endpoint\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.result[0].api.address).to.eql(\"http://127.0.0.1:8080/api/v1\")",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/plugins/thing2x-core-protocol-logger/instances/core-protocol/stop",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"plugins",
										"thing2x-core-protocol-logger",
										"instances",
										"core-protocol",
										"stop"
									]
								}
							},
							"response": []
						},
						{
							"name": "plugin start protocol-logger",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fc2849-05f4-4afe-82f0-8d96e4a52777",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"api endpoint\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.result[0].api.address).to.eql(\"http://127.0.0.1:8080/api/v1\")",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/plugins/thing2x-core-protocol-logger/instances/core-protocol/start",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"plugins",
										"thing2x-core-protocol-logger",
										"instances",
										"core-protocol",
										"start"
									]
								}
							},
							"response": []
						},
						{
							"name": "plugin thing2x-core-http",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fc2849-05f4-4afe-82f0-8d96e4a52777",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"api endpoint\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.result[0].api.address).to.eql(\"http://127.0.0.1:8080/api/v1\")",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/plugins/thing2x-core-http/",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"plugins",
										"thing2x-core-http",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "plugin thing2x-core-http config",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fc2849-05f4-4afe-82f0-8d96e4a52777",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"api endpoint\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.result[0].api.address).to.eql(\"http://127.0.0.1:8080/api/v1\")",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/plugins/thing2x-core-http/config",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"plugins",
										"thing2x-core-http",
										"config"
									]
								}
							},
							"response": []
						},
						{
							"name": "create instance \"portal\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fc2849-05f4-4afe-82f0-8d96e4a52777",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"api endpoint\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.result[0].api.address).to.eql(\"http://127.0.0.1:8080/api/v1\")",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auto-start\": false,\n    \"config\": {\n        \"cors\": {\n            \"enabled\": true\n        },\n        \"local\": {\n            \"enabled\": true,\n            \"bind\": {\n                \"address\": \"0.0.0.0\"\n            },\n            \"port\": 8888,\n            \"address\": \"127.0.0.1\",\n            \"secure\": {\n                \"address\": \"127.0.0.1\",\n                \"bind\": {\n                    \"address\": \"0.0.0.0\"\n                },\n                \"enabled\": false,\n                \"port\": 443\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/plugins/thing2x-core-http/instances/portal",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"plugins",
										"thing2x-core-http",
										"instances",
										"portal"
									]
								}
							},
							"response": []
						},
						{
							"name": "update instance \"portal\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fc2849-05f4-4afe-82f0-8d96e4a52777",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"api endpoint\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.result[0].api.address).to.eql(\"http://127.0.0.1:8080/api/v1\")",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auto-start\": false,\n    \"config\": {\n        \"cors\": {\n            \"enabled\": true\n        },\n        \"local\": {\n            \"enabled\": true,\n            \"bind\": {\n                \"address\": \"0.0.0.0\"\n            },\n            \"port\": 9876,\n            \"address\": \"127.0.0.1\",\n            \"secure\": {\n                \"enabled\": false\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/plugins/thing2x-core-http/instances/portal",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"plugins",
										"thing2x-core-http",
										"instances",
										"portal"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete instance \"portal\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fc2849-05f4-4afe-82f0-8d96e4a52777",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"api endpoint\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.result[0].api.address).to.eql(\"http://127.0.0.1:8080/api/v1\")",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auto-start\": false,\n    \"config\": {\n        \"cors\": {\n            \"enabled\": true\n        },\n        \"local\": {\n            \"enabled\": true,\n            \"bind\": {\n                \"address\": \"0.0.0.0\"\n            },\n            \"port\": 8888,\n            \"address\": \"127.0.0.1\",\n            \"secure\": {\n                \"address\": \"127.0.0.1\",\n                \"bind\": {\n                    \"address\": \"0.0.0.0\"\n                },\n                \"enabled\": false,\n                \"port\": 443\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/plugins/thing2x-core-http/instances/portal",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"plugins",
										"thing2x-core-http",
										"instances",
										"portal"
									]
								}
							},
							"response": []
						},
						{
							"name": "config of \"portal\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fc2849-05f4-4afe-82f0-8d96e4a52777",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"api endpoint\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.result[0].api.address).to.eql(\"http://127.0.0.1:8080/api/v1\")",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/plugins/thing2x-core-http/instances/portal/config",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"plugins",
										"thing2x-core-http",
										"instances",
										"portal",
										"config"
									]
								}
							},
							"response": []
						},
						{
							"name": "plugin status \"portal\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fc2849-05f4-4afe-82f0-8d96e4a52777",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"api endpoint\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.result[0].api.address).to.eql(\"http://127.0.0.1:8080/api/v1\")",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/plugins/thing2x-core-http/instances/portal",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"plugins",
										"thing2x-core-http",
										"instances",
										"portal"
									]
								}
							},
							"response": []
						},
						{
							"name": "plugin stop \"portal\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fc2849-05f4-4afe-82f0-8d96e4a52777",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"api endpoint\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.result[0].api.address).to.eql(\"http://127.0.0.1:8080/api/v1\")",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/plugins/thing2x-core-http/instances/portal/stop",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"plugins",
										"thing2x-core-http",
										"instances",
										"portal",
										"stop"
									]
								}
							},
							"response": []
						},
						{
							"name": "plugin start \"portal\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fc2849-05f4-4afe-82f0-8d96e4a52777",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"api endpoint\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.result[0].api.address).to.eql(\"http://127.0.0.1:8080/api/v1\")",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/plugins/thing2x-core-http/instances/portal/start",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"plugins",
										"thing2x-core-http",
										"instances",
										"portal",
										"start"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "packages",
					"description": "",
					"item": [
						{
							"name": "packages",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fc2849-05f4-4afe-82f0-8d96e4a52777",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"api endpoint\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.result[0].api.address).to.eql(\"http://127.0.0.1:8080/api/v1\")",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/packages",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"packages"
									]
								}
							},
							"response": []
						},
						{
							"name": "package smqd-core",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fc2849-05f4-4afe-82f0-8d96e4a52777",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"api endpoint\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.result[0].api.address).to.eql(\"http://127.0.0.1:8080/api/v1\")",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/packages/smqd-core",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"packages",
										"smqd-core"
									]
								}
							},
							"response": []
						},
						{
							"name": "packages query=core",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fc2849-05f4-4afe-82f0-8d96e4a52777",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"api endpoint\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.result[0].api.address).to.eql(\"http://127.0.0.1:8080/api/v1\")",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/packages?query=core",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"packages"
									],
									"query": [
										{
											"key": "query",
											"value": "core"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "package install",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fc2849-05f4-4afe-82f0-8d96e4a52777",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"api endpoint\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.result[0].api.address).to.eql(\"http://127.0.0.1:8080/api/v1\")",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/packages/smqd-bridge-http/install",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"packages",
										"smqd-bridge-http",
										"install"
									]
								}
							},
							"response": []
						},
						{
							"name": "package smqd-bridge-http",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fc2849-05f4-4afe-82f0-8d96e4a52777",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"response code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(0);",
											"});",
											"",
											"pm.test(\"api endpoint\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.result[0].api.address).to.eql(\"http://127.0.0.1:8080/api/v1\")",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/management/packages/smqd-bridge-http",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"management",
										"packages",
										"smqd-bridge-http"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "routes",
			"description": "",
			"item": [
				{
					"name": "routes",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://{{smqd_hostport}}/{{smqd_api}}/routes?curr_page=1&page_size=20",
							"protocol": "http",
							"host": [
								"{{smqd_hostport}}"
							],
							"path": [
								"{{smqd_api}}",
								"routes"
							],
							"query": [
								{
									"key": "curr_page",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "route  $SYS/faults",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://{{smqd_hostport}}/{{smqd_api}}/routes/$SYS/faults",
							"protocol": "http",
							"host": [
								"{{smqd_hostport}}"
							],
							"path": [
								"{{smqd_api}}",
								"routes",
								"$SYS",
								"faults"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "clients",
			"description": "",
			"item": [
				{
					"name": "clients",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://{{smqd_hostport}}/{{smqd_api}}/clients",
							"protocol": "http",
							"host": [
								"{{smqd_hostport}}"
							],
							"path": [
								"{{smqd_api}}",
								"clients"
							]
						}
					},
					"response": [
						{
							"id": "dc2d01a4-d70a-45d2-95c9-3d4f932ac144",
							"name": "GET clients",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/clients",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"clients"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "582",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 06 Jul 2018 12:50:46 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "akka-http/10.1.3",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"code\":0,\"result\":{\"current_page\":1,\"total_page\":1,\"page_size\":20,\"total_num\":5,\"objects\":[{\"topic\":\"sender/+/temp\",\"qos\":2,\"clientId\":\"clientA\",\"channelId\":\"test-01:core-mqtt:mqtt:2\"},{\"topic\":\"sender/+/temp\",\"qos\":1,\"clientId\":\"clientb\",\"channelId\":\"test-01:core-mqtt:mqtt:1\"},{\"topic\":\"$local/$SYS/faults/#\",\"qos\":0,\"actor\":\"akka://core-test/user/chief/registry_callbacks/$a\"},{\"topic\":\"$SYS/requestors/test-01/#\",\"qos\":0,\"actor\":\"akka://core-test/user/chief/requestors\"},{\"topic\":\"$local/$SYS/protocols/#\",\"qos\":0,\"actor\":\"akka://core-test/user/chief/registry_callbacks/$b\"}]}}"
						},
						{
							"id": "7e588f51-91f4-426a-9c79-a66529a4d332",
							"name": "GET clients",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/clients",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"clients"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "415",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 06 Jul 2018 09:01:22 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "akka-http/10.1.3",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"code\":0,\"result\":[{\"topic\":\"$local/$SYS/faults/#\",\"qos\":0,\"actor\":\"akka://core-test/user/chief/registry_callbacks/$a\"},{\"topic\":\"$SYS/requestors/test-01/#\",\"qos\":0,\"actor\":\"akka://core-test/user/chief/requestors\"},{\"topic\":\"$local/$SYS/protocols/#\",\"qos\":0,\"actor\":\"akka://core-test/user/chief/registry_callbacks/$b\"},{\"topic\":\"sender/+/temp\",\"qos\":2,\"clientId\":\"clientA\",\"channelId\":\"test-01:core-mqtt:mqtt:2\"}]}"
						}
					]
				},
				{
					"name": "clients paging",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://{{smqd_hostport}}/{{smqd_api}}/clients?page_size=3&curr_page=2",
							"protocol": "http",
							"host": [
								"{{smqd_hostport}}"
							],
							"path": [
								"{{smqd_api}}",
								"clients"
							],
							"query": [
								{
									"key": "page_size",
									"value": "3"
								},
								{
									"key": "curr_page",
									"value": "2"
								}
							]
						}
					},
					"response": [
						{
							"id": "75b72642-8e3f-4380-a0dd-30edbf30c83b",
							"name": "GET clients",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/clients",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"clients"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "415",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 06 Jul 2018 09:01:22 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "akka-http/10.1.3",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"code\":0,\"result\":[{\"topic\":\"$local/$SYS/faults/#\",\"qos\":0,\"actor\":\"akka://core-test/user/chief/registry_callbacks/$a\"},{\"topic\":\"$SYS/requestors/test-01/#\",\"qos\":0,\"actor\":\"akka://core-test/user/chief/requestors\"},{\"topic\":\"$local/$SYS/protocols/#\",\"qos\":0,\"actor\":\"akka://core-test/user/chief/registry_callbacks/$b\"},{\"topic\":\"sender/+/temp\",\"qos\":2,\"clientId\":\"clientA\",\"channelId\":\"test-01:core-mqtt:mqtt:2\"}]}"
						}
					]
				},
				{
					"name": "client ClientId",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://{{smqd_hostport}}/{{smqd_api}}/clients/ClientA",
							"protocol": "http",
							"host": [
								"{{smqd_hostport}}"
							],
							"path": [
								"{{smqd_api}}",
								"clients",
								"ClientA"
							]
						}
					},
					"response": [
						{
							"id": "3ab7b43b-7a60-4e84-9045-e96b8d400fc6",
							"name": "GET clients",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/clients",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"clients"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "415",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 06 Jul 2018 09:01:22 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "akka-http/10.1.3",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"code\":0,\"result\":[{\"topic\":\"$local/$SYS/faults/#\",\"qos\":0,\"actor\":\"akka://core-test/user/chief/registry_callbacks/$a\"},{\"topic\":\"$SYS/requestors/test-01/#\",\"qos\":0,\"actor\":\"akka://core-test/user/chief/requestors\"},{\"topic\":\"$local/$SYS/protocols/#\",\"qos\":0,\"actor\":\"akka://core-test/user/chief/registry_callbacks/$b\"},{\"topic\":\"sender/+/temp\",\"qos\":2,\"clientId\":\"clientA\",\"channelId\":\"test-01:core-mqtt:mqtt:2\"}]}"
						}
					]
				},
				{
					"name": "client query=lient",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://{{smqd_hostport}}/{{smqd_api}}/clients?query=lient",
							"protocol": "http",
							"host": [
								"{{smqd_hostport}}"
							],
							"path": [
								"{{smqd_api}}",
								"clients"
							],
							"query": [
								{
									"key": "query",
									"value": "lient"
								}
							]
						}
					},
					"response": [
						{
							"id": "e06c2516-2dfb-4274-ae6f-c7bb23354721",
							"name": "GET clients",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://{{smqd_hostport}}/{{smqd_api}}/clients",
									"protocol": "http",
									"host": [
										"{{smqd_hostport}}"
									],
									"path": [
										"{{smqd_api}}",
										"clients"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "415",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 06 Jul 2018 09:01:22 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "akka-http/10.1.3",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"code\":0,\"result\":[{\"topic\":\"$local/$SYS/faults/#\",\"qos\":0,\"actor\":\"akka://core-test/user/chief/registry_callbacks/$a\"},{\"topic\":\"$SYS/requestors/test-01/#\",\"qos\":0,\"actor\":\"akka://core-test/user/chief/requestors\"},{\"topic\":\"$local/$SYS/protocols/#\",\"qos\":0,\"actor\":\"akka://core-test/user/chief/registry_callbacks/$b\"},{\"topic\":\"sender/+/temp\",\"qos\":2,\"clientId\":\"clientA\",\"channelId\":\"test-01:core-mqtt:mqtt:2\"}]}"
						}
					]
				}
			]
		},
		{
			"name": "metrics",
			"description": "",
			"item": [
				{
					"name": "metrics",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://{{smqd_hostport}}/{{smqd_api}}/metrics",
							"protocol": "http",
							"host": [
								"{{smqd_hostport}}"
							],
							"path": [
								"{{smqd_api}}",
								"metrics"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}